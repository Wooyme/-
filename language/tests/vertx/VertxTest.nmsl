load "language/tests/vertx/VertxLoad.nmsl";

fn main(){
    stop = {stop:false};
    vertx = Vertx.vertx();
    client = vertx jdbc;
    vertx.createHttpServer().requestHandler({handle:{this,req:
        if(req.action=="stop") {
            stop.stop = true;
            req.response().end(Buffer.buffer("再见\n"));
            return;
        }
        offset = req.offset;
        limit = req.limit;
        println("Offset:"+offset+" limit:"+limit);
        client.query("SELECT deviceId FROM sstalink_device LIMIT "+offset+","+limit,{handle:@result} Handler);
        await @result->(this,ar);
        if(ar.succeeded()){
            ret = {result:""};
            ar.result().rows forEach { v:
                v.deviceId println;
                ret.result = ret.result+v.deviceId+"\n";
            };
            req.response().end(Buffer.buffer(ret.result+"\n"));
        }else{
            println(ar.cause().getMessage());
        }
    }} Handler).listen(8080 to "int");
    while(!stop.stop){
        sleep(1000);
    }
}

fn jdbc(vertx){
    config = Json();
    config.url = "jdbc:mysql://link.hdussta.cn/sstalink";
    config.driver_class = "com.mysql.cj.jdbc.Driver";
    config.user = "root";
    config.password = "Admin88888";
    return JDBC.createShared(vertx,config);
}
